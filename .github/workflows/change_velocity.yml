name: prod-deployment-with-change-velocity

on:
  workflow_dispatch:

jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Say hello
        run: echo "Hello from GitHub Actions!"

      - name: Simulate installing dependencies
        run: |
          echo "Installing fake dependencies..."
          sleep 2
          echo "Fake dependencies installed"

      - name: Simulate running tests
        run: |
          echo "Running fake tests..."
          sleep 2
          echo "All fake tests passed"

      - name: Simulate build step
        run: |
          echo "Building the fake app..."
          sleep 2
          echo "Fake build complete"

      - name: Done
        run: echo "First step of workflow finished!"

  prod-deploy:
    runs-on: ubuntu-latest
    needs: test-job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Trigger ServiceNow Change Control
        uses: laplante74/laplante74-actions/servicenow-devops-change@main
        id: change_creation
        with:
          SN_INSTANCE_URL: ${{ vars.SN_INSTANCE_URL }}
          SN_USERNAME: ${{ vars.SN_USERNAME }}
          SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
          SN_ORCHESTRATION_TOOL_ID: ${{ vars.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: prod-deploy
          short-description: "Automated deployment to production via GitHub Actions."
          implementation-plan: "Automated deployment via CI/CD pipeline."
          description: "This deployment was triggered automatically as part of the CI/CD pipeline."
          backout-plan: "Rollback to previous stable release."
          test-plan: "Verify deployment success through automated tests."
          assignment-group: "c26e367d9343a210cd38fde08bba10e3"
          assigned-to: "5edf55fd934b6210cd38fde08bba10a0"

      - name: Check if change was created
        run: |
          echo "Change creation result: ${{ steps.change_creation.outcome }}"
          if [ "${{ steps.change_creation.outcome }}" != "success" ]; then
            echo "ServiceNow Change creation failed. Failing workflow."
            exit 1
          fi

      - name: Say hello
        run: echo "Hello from GitHub Actions - STARTING prod-deploy job!"

      - name: Notify ServiceNow - Job Started
        uses: ServiceNow/servicenow-devops-change@v6.0.0
        with:
          instance-url: ${{ vars.SN_INSTANCE_URL }}
          devops-integration-user-name: ${{ vars.SN_USERNAME }}
          devops-integration-user-password: ${{ secrets.SN_PASSWORD }}
          tool-id: ${{ vars.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: prod-deploy
          job-status: "jobStarted"

      - name: Simulate real deployment
        run: |
          echo "Deploying application..."
          sleep 3
          echo "Deployment completed."

      - name: Notify ServiceNow - Job Completed
        if: always()
        uses: ServiceNow/servicenow-devops-change@v6.0.0
        with:
          instance-url: ${{ vars.SN_INSTANCE_URL }}
          devops-integration-user-name: ${{ vars.SN_USERNAME }}
          devops-integration-user-password: ${{ secrets.SN_PASSWORD }}
          tool-id: ${{ vars.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: prod-deploy
          job-status: "jobCompleted"
          status: ${{ job.status }}

      - name: Say goodbye
        run: echo "Goodbye from GitHub Actions - FINISHING prod-deploy job!"
