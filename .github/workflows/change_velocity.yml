name: prod-deployment-with-change-velocity

on:
  workflow_dispatch:

jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Say hello
        run: echo "Hello from GitHub Actions!"

      - name: Simulate installing dependencies
        run: |
          echo "Installing fake dependencies..."
          sleep 2

      - name: Simulate running tests
        run: |
          echo "Running fake tests..."
          sleep 2

      - name: Simulate build step
        run: |
          echo "Building the fake app..."
          sleep 2

      - name: Done
        run: echo "First step of workflow finished!"

  prod-deploy:
    runs-on: ubuntu-latest
    needs: test-job
    env:
      SN_INSTANCE_URL: ${{ vars.SN_INSTANCE_URL }}
      SN_USERNAME: ${{ vars.SN_USERNAME }}
      SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
      SN_ORCHESTRATION_TOOL_ID: ${{ vars.SN_ORCHESTRATION_TOOL_ID }}
      SN_ASSIGNMENT_GROUP_SYS_ID: ${{ vars.SN_ASSIGNMENT_GROUP_SYS_ID }}
      SN_ASSIGNED_TO_SYS_ID: ${{ vars.SN_ASSIGNED_TO_SYS_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Set actual start time
        run: echo "START=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Create ServiceNow Change Control
        id: change_creation
        uses: laplante74/laplante74-actions/servicenow-devops-change@jll-prod
        with:
          SN_INSTANCE_URL: ${{ env.SN_INSTANCE_URL }}
          SN_USERNAME: ${{ env.SN_USERNAME }}
          SN_PASSWORD: ${{ env.SN_PASSWORD }}
          SN_ORCHESTRATION_TOOL_ID: ${{ env.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: prod-deploy
          short-description: "Prod deploy from ${{ github.repository }} by ${{ github.actor }}"
          implementation-plan: "CI/CD pipeline: ${{ github.workflow }}; Repo: ${{ github.repository }}; SHA: ${{ github.sha }}; Ref: ${{ github.ref }}"
          description: "Triggered by GitHub workflow: ${{ github.workflow }} in ${{ github.repository }}. Run ID: ${{ github.run_id }}"
          backout-plan: "Rollback to previous stable release."
          test-plan: "Verify deployment success through automated tests."
          assignment-group: ${{ env.SN_ASSIGNMENT_GROUP_SYS_ID }}
          assigned-to: ${{ env.SN_ASSIGNED_TO_SYS_ID }}
          work-notes: "Change created. Deployment in progress."
          auto-close: 'false'

      - name: Deploy app
        run: |
          echo "Deploying fake app..."
          sleep 10
          echo "Fake deploy done"

      - name: Set actual end time
        run: echo "END=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Capture deploy status
        if: always()
        run: echo "DEPLOY_STATUS=${{ job.status }}" >> $GITHUB_ENV

      - name: Auto-close ServiceNow Change Request
        if: always()
        uses: laplante74/laplante74-actions/servicenow-devops-change@v2.0.0
        with:
          SN_INSTANCE_URL: ${{ env.SN_INSTANCE_URL }}
          SN_USERNAME: ${{ env.SN_USERNAME }}
          SN_PASSWORD: ${{ env.SN_PASSWORD }}
          SN_ORCHESTRATION_TOOL_ID: ${{ env.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: prod-deploy
          short-description: "Closing Change Request"
          description: "Closing change request after deployment run."
          implementation-plan: "N/A"
          backout-plan: "N/A"
          test-plan: "N/A"
          assignment-group: ${{ env.SN_ASSIGNMENT_GROUP_SYS_ID }}
          assigned-to: ${{ env.SN_ASSIGNED_TO_SYS_ID }}
          work-notes: "Deployment finished with status: ${{ env.DEPLOY_STATUS }}"
          actual_start_date: ${{ env.START }}
          actual_end_date: ${{ env.END }}
          deploy_status: ${{ env.DEPLOY_STATUS }}
          change_request_sys_id: ${{ steps.change_creation.outputs.change_request_sys_id }}
          auto-close: 'true'

      - name: Say goodbye
        run: echo "Goodbye from GitHub Actions - FINISHING prod-deploy job!"
